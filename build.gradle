plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'co.istad'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// Configure source sets to include Avro schema files
sourceSets {
    main {
        resources {
            srcDirs += ['src/main/avro']  // Add avro directory to resources
        }
    }
}

// Configure Avro plugin
avro {
    fieldVisibility = "PRIVATE"
    createSetters = true
    createOptionalGetters = false
    gettersReturnOptional = false
    optionalGettersForNullableFieldsOnly = false
    templateDirectory = null
    stringType = "String"
    enableDecimalLogicalType = true
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {

    //implementation 'org.apache.poi:poi-ooxml:5.4.0'

    //implementation 'org.springframework.boot:spring-boot-starter-batch'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'

    // Add the connect model dependency
    implementation 'io.confluent:kafka-avro-serializer:7.5.1'
    implementation 'org.apache.avro:avro:1.11.4'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    implementation 'org.springframework.kafka:spring-kafka'

    testImplementation 'org.springframework.batch:spring-batch-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Make sure generateAvroJava runs before compilation
tasks.named('compileJava').configure {
    source += tasks.named('generateAvroJava')
}
